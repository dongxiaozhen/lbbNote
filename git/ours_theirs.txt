

<<<<<<< 和 ======= 之间的部分称为 ours,
======= 和 >>>>>>> 之间则称为 theirs

    git checkout --ours （ours 代表冲突的下面部分，）
    git checkout --theirs（ours 代表冲突的上面部分，）

git merge 的时候，HEAD代表***当前分支***,
    master: git merge  develop  (在master分支，合并develop分支)

    <<<<<<< HEAD (master 分支)
    m
    =======
    d
    >>>>>>> develop (develop 分支)

-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------

git rebase 的时候，HEAD 代表要 ***合并分支*** 
    master: git rebase develop (在master分支rebase develop)

    <<<<<<< HEAD (develop分支)
    d
    =======
    m
    >>>>>>> master change (master 分支)

git merge 的时候，老代码是本地的要提交的代码，新代码是要合并的代码
git rebase的时候，因为是在新代码的基础上合并本地的代码，所以，老代码是要合并的代码, 新代码代表自己本地的
    rebase 隐含了一个 git checkout develop 的过程，将 HEAD 从 master 分支变成了 develop分支。
