json工具
	github.com/simeji/jid
    jq  
        . 代表整个文件
        .key 获取字段key
        .[]  获取数组，可以使用 全部数组.[]  一个指定.[1] 一个范围 .[1:3] 
        jq '.[].c_resource | {id: .resource_id, type: .resource_type}' diff_resource  // 过滤指定字段, {}的作用是将结果结构化显示
            jq '.[].c_resource | .resource_id, .resource_type' diff_resource
        struct c_resource{
            resource_id
            resource_type
            name
        }
        
        // 格式化输出 {} json 输出，[] 数组输出，() 文本输出
         jq --sort-keys 'sort_by(.Id)'
            --sort-keys 排序字段
            sort_by() 排序数组

        线上操作网址：https://jqplay.org/

    jsoncsv  json 文件转csv
        pip install jsoncsv
        cat raw.json | jsoncsv | mkexcel > output.csv  当个json结构
        cat data_bag_item.json | jsoncsv -A | mkexcel > output.csv json是数组结构

    jless 
        brew install jless

    fx  
        go install github.com/antonmedv/fx@latest


regex 使用 regex-vis.com 可视化正则表达式
    https://regex-vis.com/samples


github 代码目录插件
    https://github.com/buunguyen/octotree


bat 类似cat
     https://github.com/sharkdp/bat

fzf 搜索
     https://github.com/junegunn/fzf

diff-so-fancy  文件比较
    https://github.com/so-fancy/diff-so-fancy


ncdu   du
    https://dev.yorhel.nl/ncdu



lsd 图形颜色的ls
     https://github.com/Peltoche/lsd

命令行
    https://github.com/wtfutil/wtf

depth 查看go 依赖
    https://github.com/KyleBanks/depth

rts 更加json字符串生成结构体
    https://github.com/galeone/rts

rust重写工具
    https://deepu.tech/rust-terminal-tools-linux-mac-windows-fish-zsh/
        1. exa ==> ls
        2. rip ==> rm 
        3. dust ==> du

