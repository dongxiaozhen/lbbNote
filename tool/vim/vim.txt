动词
动词代表了我们要进行的操作 (:h operator)
    d delete 删除
    r replace 替代
    c change 修改
    y yank   复制
    v visual select 选取
	gU		大写转换
	gu		小写转换
    g~      大小写反转
    ~       大小写转化一个字符


介词
介词界定了待编辑文本的范围或者位置
    i inside 在...之内
    a around 环绕...
    t to 到...位置之前
    f forward 到..位置上

名词
名词代表了我们即将处理的文本
    w word   单词
    s sentence 句子
    p paragraph 段落
    t tag 标签
	b 括号

组合句子
    动词 介词 名词      VIS  select inside sentence
    动词 介词/数词 名词   数词指定了待编辑文本对象的范围   c3w
    数次 动词 名词        数次表示将操作执行n次   2dw   twice delete word


regex  /     (:h \v) (:h magic)
	\v very magic  除了0-9a-zA-Z_ 三种字符外，其他字符都有含义(不需要\转义)
	\V very nomagic 原文搜索(转义字符只有\ / ?)
    \m magic 和 \v差不多
    \M nomagic
        . * ^ $ [] [^] \+   \?  \{n,m} \< \> \( \)
	\c 忽略大小写
	:h/character-classes 查看\w含义

窗口竖直分割
    vsp sp

窗口切换
    ctrl+w+ h/j/k/l/   或者方向箭头

窗口
    Ctrl-W +    扩大窗口(多个窗口整体扩大)
    Ctrl-W -    缩小窗口(多个窗口整体缩小)
	:resize +10 扩大窗口 水平切割的 ----
    :vertical resize +10 扩大窗口 垂直切割的 |

列模式 ctl+v
	行首插入 I
	行尾插入 A
	删除     d
	替换     c
	输入     shift + i

tab切换 					 tabn tabp
buff切换					 bn bp buffers(列出buffer,继续输入b{1,2}跳转到相应的文件)
搜索结果切换(:vim/xx/**)
    搜索 love 关键词  
    :vim/love/*                     当前文件夹下的所有文件  
    :vim/love/**                    当前文件夹及子目录下的所有文件  
    :vim/love/**/*.php              当前文件夹及子目录下的所有 php 文件  
    :vim/love/*.php aa/**/*.php     当前文件夹下的 php 文件和 aa 目录及子目录下的 php 文件 
        :cw         查看搜索结果  
        :ccl        关闭搜索结果  
        :cn         查找下一个  
        :cp         查找上一个 
搜索结果:CtrlSF o p t 
		:CtrlSFOpen  // previer list
		'fixed-strings'
		-R regex
向后查找字符 f
向前查找非组 t
    ; 下一个字符
    ，上一个字符

grep -E(extend regex) -F(--fixed-strings) 

搜索文件 :CtrlP 
	ctrl + j/k 进行上下选择
	ctrl + x 在当前窗口水平分屏打开文件
	ctrl + v 同上, 垂直分屏
	ctrl + t 在tab中打开	

代码折叠 za zo 
保存:w !sudo tee %

ma 'a 标记，返回到标记
u undo 撤销 
<c-r> redo 回退
trl + t 在tab中打开

tugitive git插件
	:Gdiff ==Gvdiff
	:Gsdiff
	:Gstatus -(git reset HEAD/git add) dv(Gvdiff)
	:Gcommit 
	:Gpull --rebase origin master
	:Gmerge

csv
	 可视化表 	:CSVTabularize
	 可视化一行 :ArrangeColumn
		撤退    :UnArrangeColumn
	 可视化一列 :HiColumn
	 删除一列   :DeleteColumn
	 列数量 	:NrColumns
	 按列排序   :1,8CSVSort 3
	 一列总和   :SumCol

hex
	:%!xxd
 
大小写转换
	g[u|U][l|b|w]
		u:转小写
		U:转大写
		
		l:字符
		w:单词
		e:当前位置到单词结尾
		b:前一个单词

数字加/减1 	 ctrl + a/x
数字加/减num num+ctrl + a/x
寄存器运算  ctrl + r =
寄存器使用 "[a-zA-Z]   "ay "ad    :h quote_alpha
			y  // defer to "0
			d  // defer to "1 - 8
	
自动补全快捷键
	ctrl + n 向后切换成员
	ctrl + p 向前切换成员
	ctrl + y 表示退出下拉窗口, 并接受当前选项


注释代码
	\ci 格式：// 
	\cm 格式：/* */
	\c空格 可是解注释 

录制操作
		开始 qa 
		结束 Esc + q 
		执行 @a
		
struct split and join
	gS 分开
	gJ 合并

函数跳转
	[[ 前一个函数
	]] 后一个函数
    ctrl+] 函数定义
    ctrl+t 返回
    ctrl+o 返回

当前文件里搜索函数
	:GoDecls
	:GoDeclsDir

实现接口函数
	:GoImpl io.ReadWriteCloser

重构:修改名字
	:GoRename aa

查找所有用到该类型的地方
	:GoReferrers

格式化
   ctrl+v(可视化选择) =
   当前行缩进 ==
   多行缩进 3==



删除空格行：
    非编辑状态下输入:g/^$/d
删除行首空格：
    非编辑状态下输入:%s/^\s*//g
删除行尾空格：
    非编辑状态下输入:%s/\s*$//g

Line number
   .               the current line
   $               the last line in the file
   %               equal to 1,$ (the entire file)

:g :global
   :[range]g[lobal]/{pattern}/[cmd]

:s :substitute
   :[range]s[ubstitute]/{pattern}/{string}/[flags]

换行
  模式匹配的时候\n代表换行
  替换的时候\r代表换行


编译：
 ./configure --with-features=huge \
    --enable-cscope \
    --enable-rubyinterp \
    --enable-largefile \
    --disable-netbeans \
    --enable-pythoninterp \
    --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \
    --enable-python3interp=yes \
    --with-python3-config-dir=/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu \
    --enable-luainterp \
    --with-luajit \
    --enable-fail-if-missing \
    --with-lua-prefix=/usr \
    --prefix=/usr
