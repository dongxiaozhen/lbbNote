thrift -r --gen go  xx.thrift

service
	一个客户一个goroutine,顺序读取并处理客户端的调用。map[methname]handle 存储调用,除了method_unkonw错误,其他错误都退出G

client
	阻塞调用


protocol(binary,json debug,,)协议都有  methodname,type(call,resp,err),seqid,info
transport(frame,stream, zlib) 传输协议(比如：frame后面的字段有多长，stream直接传输，zlib压缩了再传输)

TServerTransport        tcp,udp等底层服务器端网络操作(accept,listen)，
TTransportFactory       获取包装底层网络操作的传输(缓存read、write,压缩read、write)
TProtocolFactory        传输协议(json传输、二进制传输(传输开始，字段传输开始，传输数据，结束标志))

分层架构(类似tcp/ip协议层)

	server

	protocol

	xxTransport (TBufferedTransport:bufio.ReadWriter; TFramedTransport:w:bytes.Buffer,r:bufio.Reader,前面有size字段)

	transport 	(封装了Read,Write接口，添加读写超时设置)

	original socket 


binary protocol

Binary protocol Message, strict encoding, 12+ bytes:
+--------+--------+--------+--------+--------+--------+--------+--------+--------+...+--------+--------+--------+--------+--------+
|1vvvvvvv|vvvvvvvv|unused  |00000mmm| name length                       | name                | seq id                            |
+--------+--------+--------+--------+--------+--------+--------+--------+--------+...+--------+--------+--------+--------+--------+

Binary protocol Message, old encoding, 9+ bytes:
+--------+--------+--------+--------+--------+...+--------+--------+--------+--------+--------+--------+                                    
| name length                       | name                |00000mmm| seq id                            |
+--------+--------+--------+--------+--------+...+--------+--------+--------+--------+--------+--------+
	* `mmm` is the message type
		* _Call_: 1
		* _Reply_: 2
		* _Exception_: 3
		* _Oneway_: 4
	
	* `name` is the method name, a UTF-8 encoded string.
	* `seq id` is the sequence id, a signed 32 bit integer encoded in network (big endian) order.

Binary protocol field header and field value:
+--------+--------+--------+--------+...+--------+
|tttttttt| field id        | field value         |
+--------+--------+--------+--------+...+--------+
	* `tttttttt` the field-type, a signed 8 bit integer.
	* `field id` the field-id, a signed 16 bit integer in big endian order.
	* `field-value` the encoded field value.	
		list,set
			+--------+--------+--------+--------+--------+--------+...+--------+
			|tttttttt| size                              | elements            |
			+--------+--------+--------+--------+--------+--------+...+--------+
		map
			map  ::=  key-element-type value-element-type size ( key value )*
			+--------+--------+--------+--------+--------+--------+--------+...+--------+
			|kkkkkkkk|vvvvvvvv| size                              | key value pairs     |
			+--------+--------+--------+--------+--------+--------+--------+...+--------+



