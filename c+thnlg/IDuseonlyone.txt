
FreeIncidentId(WORD wIncidentId)
{
    m_pcIncidents[wIncidentId].SetId(m_wFirstEmptyIndex);
    m_wFirstEmptyIndex = wIncidentId;
}

WORD
GetFreeIncidentId(const CL_sMapLonLat & sIncidentIconPos)
{
    if (TRF_SUB_INVALID_VALUE_WORD != m_wFirstEmptyIndex) {
        return m_wFirstEmptyIndex;
    }

    if (m_cIncidentIdList.GetCapacity() <= m_wHighestIndex) {
        // Set traffic incident deletion flag when incident distance(form car position)
        // farther than filter distance, if hasn't incident setting deletion flag, we will
        // set deletion flag at the farthest incident.
        UpdateDistanceRadius(sIncidentIconPos);

        // Remove incident when incident has deletion flag.
        RemoveToBeDeletedIncidents();

        if (TRF_SUB_INVALID_VALUE_WORD != m_wFirstEmptyIndex) {
            return m_wFirstEmptyIndex;
        }

        if (m_cIncidentIdList.GetCapacity() <= m_wHighestIndex) {
            return TRF_SUB_INVALID_INCIDENT_ID;
        }
    }

    return m_wHighestIndex;
}

VOID
UseIncidentId(WORD wIncidentId)
{
    // Check pointer object value whether in invalid.
    if (NULL == m_pcIncidents) {
        return;
    }

    if (m_wFirstEmptyIndex == wIncidentId) {
        m_wFirstEmptyIndex = m_pcIncidents[wIncidentId].GetId();
    }
    else {
        m_wHighestIndex++;
    }
}