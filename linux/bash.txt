"info $name" 	双引号 里面的$name输出变量的结果
'info $name'	单引号 里面的$name原样输出
`cmd`		反斜扛 运行命令的结果
cmd1 && cmd2 || cmd3 cmd1运行成功就运行cmd2，否则运行 cmd3

shell 数组 
	声明 declare -a name
	追加 for i in {1..3};do
		name+=($i)  //加()
	     done 	


date
	 --date="@12345678" 显示字符窜所指的日期和时间。@时间格式转换
	-s 设置时间
	+%xxxx 显示格式


grep -l 列出匹配的文件名
     -r 递归遍历文件夹
    -F 固定字符串的查找，

sed -i 's/Event\.UseCoin/Event\.UseCoina/g' filename 查找并替换文件中的字符串
	-i edit file in place 在文件中替换，sed默认是有缓存的

curl
	curl -o [文件名] www.sina.com
	curl -L www.sina.com #有的网址是自动跳转的
	curl -i www.sina.com #`-i`参数可以显示http response的头信息  `-I`参数则是只显示http response的头信息。
	curl -v www.sina.com #`-v`参数可以显示一次http通信的整个过程，包括端口连接和http request头信息。
	curl --trace output.txt www.sina.com #更详细的通信过程
	curl --trace-ascii output.txt www.sina.com
	curl -X POST --data "data=xxx" example.com/form.cgi #Post
	curl -X POST--data-urlencode "date=April 1" example.com/form.cgi #如果你的数据没有经过表单编码，还可以让curl为你编码
	curl --cookie "name=xxx" www.example.com #使用`--cookie`参数，可以让curl发送cookie
	curl -c cookies http://example.com #`-c cookie-file`可以保存服务器返回的cookie到文件
	curl -b cookies http://example.com #`-b cookie-file`可以使用这个文件作为cookie信息，进行后续的请求
	curl --header "Content-Type:application/json" http://example.com
	curl URL --limit-rate 50k #--limit-rate限制curl的下载速度 k（千字节）和m（兆字节）指定下载速度限制。

wget
	-O 输出文件名
	-c 需要继续中断下载的
	-b 都台下载 （tail -f wget-log查看后台进度）
	--limit-rate=50k 限速

ab apache 性能测试工具
	-n 4000 //request num
    -c 3    //request concurrency

wrk 
	-c 400同时最大连接数
	-t 12 线程数量
	-d 20 测试时间，单位是秒

du -s 当前目录的总大小

column -s "分隔符" -t filename 格式化对其列 输出
watch
	-n 3 间隔时间
	-d 高亮变化的信息

seq -f"str%g" -s"`echo -e "\t"`" 1 5 100

tr -d -c -s [seq1] [seq2] <input file 
	-d 删除input中的seq1
	-c 取代所有不属于seq1的字符(seq1的补集)
	-s 把连续重复出现的字符以一个字符代替
	eg: tr -d -c "xx" <input 删除input中的"xx"

xargs 将单行输入转换为多行输入，将多行输入转化为单行输入(-n3 3个为一行，-dx 以x为頂界符)
	ls *.jpg | xargs -n1 -I cp {} /data/images  {}替换字符串
diff
	-y 以并列的方式显示对比文件
